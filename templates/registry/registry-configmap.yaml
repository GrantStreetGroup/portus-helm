apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "registry.fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  {{- if .Values.portus.tls.enabled }}
  REGISTRY_HTTP_TLS_KEY: "/certificates/portus.key"
  REGISTRY_HTTP_TLS_CERTIFICATE: "/certificates/portus.crt"
  {{- end }}

  config: |
    version: 0.1
    storage:
      filesystem:
        rootdirectory: {{ .Values.registry.mountPath }}
      delete:
        enabled: true
      cache:
        blobdescriptor: redis
    http:
      addr: 0.0.0.0:{{ .Values.registry.service.port }}
      debug:
        addr: 0.0.0.0:{{ .Values.registry.service.debugPort }}
      secret: {{ .Values.registry.http.secret }}
    redis:
      addr: {{ template "redis.fullname" . }}-master:{{ .Values.redis.master.port }}
      db: 1
    auth:
      token:
        realm: {{ printf "https://%s/v2/token" (.Values.ingress.host) | quote }}
        service: {{ printf "%s:%s" (include "registry.fullname" .) .Values.registry.service.port | quote }}
        issuer: {{ template "portus.fullname" . }}
        rootcertbundle: "/certificates/portus.crt"         
    notifications:
      endpoints:
        - name: portus
          {{- if .Values.portus.tls.enabled }}
          url: https://{{ template "portus.fullname" . }}:{{ .Values.portus.service.port }}/v2/webhooks/events
          {{- else }}
          url: http://{{ template "portus.fullname" . }}:{{ .Values.portus.service.port }}/v2/webhooks/events
          {{- end }}
          timeout: 2000ms
          threshold: 5
          backoff: 1s
          {{- if .Values.registry.notifications.enabled }}
{{ toYaml .Values.registry.notifications.endpoints | indent 6 }}
          {{- end }}